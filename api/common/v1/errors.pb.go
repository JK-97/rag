// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/errors.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 错误码枚举
type ErrorCode int32

const (
	ErrorCode_ERROR_CODE_UNSPECIFIED ErrorCode = 0
	// 客户端错误 (400-499)
	ErrorCode_ERROR_CODE_BAD_REQUEST          ErrorCode = 400
	ErrorCode_ERROR_CODE_UNAUTHORIZED         ErrorCode = 401
	ErrorCode_ERROR_CODE_FORBIDDEN            ErrorCode = 403
	ErrorCode_ERROR_CODE_NOT_FOUND            ErrorCode = 404
	ErrorCode_ERROR_CODE_METHOD_NOT_ALLOWED   ErrorCode = 405
	ErrorCode_ERROR_CODE_CONFLICT             ErrorCode = 409
	ErrorCode_ERROR_CODE_UNPROCESSABLE_ENTITY ErrorCode = 422
	ErrorCode_ERROR_CODE_TOO_MANY_REQUESTS    ErrorCode = 429
	// 服务端错误 (500-599)
	ErrorCode_ERROR_CODE_INTERNAL_SERVER_ERROR ErrorCode = 500
	ErrorCode_ERROR_CODE_NOT_IMPLEMENTED       ErrorCode = 501
	ErrorCode_ERROR_CODE_BAD_GATEWAY           ErrorCode = 502
	ErrorCode_ERROR_CODE_SERVICE_UNAVAILABLE   ErrorCode = 503
	ErrorCode_ERROR_CODE_GATEWAY_TIMEOUT       ErrorCode = 504
	// 业务逻辑错误 (1000+)
	ErrorCode_ERROR_CODE_INVALID_QUERY           ErrorCode = 1001
	ErrorCode_ERROR_CODE_DOCUMENT_NOT_FOUND      ErrorCode = 1002
	ErrorCode_ERROR_CODE_EMBEDDING_FAILED        ErrorCode = 1003
	ErrorCode_ERROR_CODE_PROCESSING_FAILED       ErrorCode = 1004
	ErrorCode_ERROR_CODE_QUOTA_EXCEEDED          ErrorCode = 1005
	ErrorCode_ERROR_CODE_MODEL_NOT_AVAILABLE     ErrorCode = 1006
	ErrorCode_ERROR_CODE_INVALID_DOCUMENT_FORMAT ErrorCode = 1007
	ErrorCode_ERROR_CODE_CHUNK_TOO_LARGE         ErrorCode = 1008
	ErrorCode_ERROR_CODE_RERANKING_FAILED        ErrorCode = 1009
	ErrorCode_ERROR_CODE_ASSEMBLY_FAILED         ErrorCode = 1010
	ErrorCode_ERROR_CODE_WORKFLOW_FAILED         ErrorCode = 1011
)

var ErrorCode_name = map[int32]string{
	0:    "ERROR_CODE_UNSPECIFIED",
	400:  "ERROR_CODE_BAD_REQUEST",
	401:  "ERROR_CODE_UNAUTHORIZED",
	403:  "ERROR_CODE_FORBIDDEN",
	404:  "ERROR_CODE_NOT_FOUND",
	405:  "ERROR_CODE_METHOD_NOT_ALLOWED",
	409:  "ERROR_CODE_CONFLICT",
	422:  "ERROR_CODE_UNPROCESSABLE_ENTITY",
	429:  "ERROR_CODE_TOO_MANY_REQUESTS",
	500:  "ERROR_CODE_INTERNAL_SERVER_ERROR",
	501:  "ERROR_CODE_NOT_IMPLEMENTED",
	502:  "ERROR_CODE_BAD_GATEWAY",
	503:  "ERROR_CODE_SERVICE_UNAVAILABLE",
	504:  "ERROR_CODE_GATEWAY_TIMEOUT",
	1001: "ERROR_CODE_INVALID_QUERY",
	1002: "ERROR_CODE_DOCUMENT_NOT_FOUND",
	1003: "ERROR_CODE_EMBEDDING_FAILED",
	1004: "ERROR_CODE_PROCESSING_FAILED",
	1005: "ERROR_CODE_QUOTA_EXCEEDED",
	1006: "ERROR_CODE_MODEL_NOT_AVAILABLE",
	1007: "ERROR_CODE_INVALID_DOCUMENT_FORMAT",
	1008: "ERROR_CODE_CHUNK_TOO_LARGE",
	1009: "ERROR_CODE_RERANKING_FAILED",
	1010: "ERROR_CODE_ASSEMBLY_FAILED",
	1011: "ERROR_CODE_WORKFLOW_FAILED",
}

var ErrorCode_value = map[string]int32{
	"ERROR_CODE_UNSPECIFIED":             0,
	"ERROR_CODE_BAD_REQUEST":             400,
	"ERROR_CODE_UNAUTHORIZED":            401,
	"ERROR_CODE_FORBIDDEN":               403,
	"ERROR_CODE_NOT_FOUND":               404,
	"ERROR_CODE_METHOD_NOT_ALLOWED":      405,
	"ERROR_CODE_CONFLICT":                409,
	"ERROR_CODE_UNPROCESSABLE_ENTITY":    422,
	"ERROR_CODE_TOO_MANY_REQUESTS":       429,
	"ERROR_CODE_INTERNAL_SERVER_ERROR":   500,
	"ERROR_CODE_NOT_IMPLEMENTED":         501,
	"ERROR_CODE_BAD_GATEWAY":             502,
	"ERROR_CODE_SERVICE_UNAVAILABLE":     503,
	"ERROR_CODE_GATEWAY_TIMEOUT":         504,
	"ERROR_CODE_INVALID_QUERY":           1001,
	"ERROR_CODE_DOCUMENT_NOT_FOUND":      1002,
	"ERROR_CODE_EMBEDDING_FAILED":        1003,
	"ERROR_CODE_PROCESSING_FAILED":       1004,
	"ERROR_CODE_QUOTA_EXCEEDED":          1005,
	"ERROR_CODE_MODEL_NOT_AVAILABLE":     1006,
	"ERROR_CODE_INVALID_DOCUMENT_FORMAT": 1007,
	"ERROR_CODE_CHUNK_TOO_LARGE":         1008,
	"ERROR_CODE_RERANKING_FAILED":        1009,
	"ERROR_CODE_ASSEMBLY_FAILED":         1010,
	"ERROR_CODE_WORKFLOW_FAILED":         1011,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2b3844fb5d150dbb, []int{0}
}

// 错误详情
type ErrorDetail struct {
	Field                string     `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Code                 string     `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Metadata             *anypb.Any `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ErrorDetail) Reset()         { *m = ErrorDetail{} }
func (m *ErrorDetail) String() string { return proto.CompactTextString(m) }
func (*ErrorDetail) ProtoMessage()    {}
func (*ErrorDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3844fb5d150dbb, []int{0}
}

func (m *ErrorDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorDetail.Unmarshal(m, b)
}
func (m *ErrorDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorDetail.Marshal(b, m, deterministic)
}
func (m *ErrorDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorDetail.Merge(m, src)
}
func (m *ErrorDetail) XXX_Size() int {
	return xxx_messageInfo_ErrorDetail.Size(m)
}
func (m *ErrorDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorDetail proto.InternalMessageInfo

func (m *ErrorDetail) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *ErrorDetail) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ErrorDetail) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ErrorDetail) GetMetadata() *anypb.Any {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// 错误响应
type ErrorResponse struct {
	Code                 ErrorCode              `protobuf:"varint,1,opt,name=code,proto3,enum=api.common.v1.ErrorCode" json:"code,omitempty"`
	Message              string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details              []*ErrorDetail         `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	RequestId            string                 `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Service              string                 `protobuf:"bytes,6,opt,name=service,proto3" json:"service,omitempty"`
	Metadata             map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ErrorResponse) Reset()         { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()    {}
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3844fb5d150dbb, []int{1}
}

func (m *ErrorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorResponse.Unmarshal(m, b)
}
func (m *ErrorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorResponse.Marshal(b, m, deterministic)
}
func (m *ErrorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorResponse.Merge(m, src)
}
func (m *ErrorResponse) XXX_Size() int {
	return xxx_messageInfo_ErrorResponse.Size(m)
}
func (m *ErrorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorResponse proto.InternalMessageInfo

func (m *ErrorResponse) GetCode() ErrorCode {
	if m != nil {
		return m.Code
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

func (m *ErrorResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ErrorResponse) GetDetails() []*ErrorDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *ErrorResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ErrorResponse) GetTimestamp() *timestamppb.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *ErrorResponse) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ErrorResponse) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// 验证错误
type ValidationError struct {
	Field                string     `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Constraint           string     `protobuf:"bytes,2,opt,name=constraint,proto3" json:"constraint,omitempty"`
	Message              string     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Value                *anypb.Any `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ValidationError) Reset()         { *m = ValidationError{} }
func (m *ValidationError) String() string { return proto.CompactTextString(m) }
func (*ValidationError) ProtoMessage()    {}
func (*ValidationError) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3844fb5d150dbb, []int{2}
}

func (m *ValidationError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidationError.Unmarshal(m, b)
}
func (m *ValidationError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidationError.Marshal(b, m, deterministic)
}
func (m *ValidationError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidationError.Merge(m, src)
}
func (m *ValidationError) XXX_Size() int {
	return xxx_messageInfo_ValidationError.Size(m)
}
func (m *ValidationError) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidationError.DiscardUnknown(m)
}

var xxx_messageInfo_ValidationError proto.InternalMessageInfo

func (m *ValidationError) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *ValidationError) GetConstraint() string {
	if m != nil {
		return m.Constraint
	}
	return ""
}

func (m *ValidationError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ValidationError) GetValue() *anypb.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

// 服务错误信息
type ServiceError struct {
	ServiceName          string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	ServiceVersion       string                 `protobuf:"bytes,2,opt,name=service_version,json=serviceVersion,proto3" json:"service_version,omitempty"`
	ErrorCode            ErrorCode              `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3,enum=api.common.v1.ErrorCode" json:"error_code,omitempty"`
	ErrorMessage         string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Details              []*ErrorDetail         `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty"`
	OccurredAt           *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=occurred_at,json=occurredAt,proto3" json:"occurred_at,omitempty"`
	TraceId              string                 `protobuf:"bytes,7,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId               string                 `protobuf:"bytes,8,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ServiceError) Reset()         { *m = ServiceError{} }
func (m *ServiceError) String() string { return proto.CompactTextString(m) }
func (*ServiceError) ProtoMessage()    {}
func (*ServiceError) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3844fb5d150dbb, []int{3}
}

func (m *ServiceError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceError.Unmarshal(m, b)
}
func (m *ServiceError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceError.Marshal(b, m, deterministic)
}
func (m *ServiceError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceError.Merge(m, src)
}
func (m *ServiceError) XXX_Size() int {
	return xxx_messageInfo_ServiceError.Size(m)
}
func (m *ServiceError) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceError.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceError proto.InternalMessageInfo

func (m *ServiceError) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ServiceError) GetServiceVersion() string {
	if m != nil {
		return m.ServiceVersion
	}
	return ""
}

func (m *ServiceError) GetErrorCode() ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

func (m *ServiceError) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *ServiceError) GetDetails() []*ErrorDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *ServiceError) GetOccurredAt() *timestamppb.Timestamp {
	if m != nil {
		return m.OccurredAt
	}
	return nil
}

func (m *ServiceError) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *ServiceError) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

// 降级响应
type FallbackResponse struct {
	Reason               string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	FallbackType         string                 `protobuf:"bytes,2,opt,name=fallback_type,json=fallbackType,proto3" json:"fallback_type,omitempty"`
	Data                 *anypb.Any             `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	FallbackAt           *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=fallback_at,json=fallbackAt,proto3" json:"fallback_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *FallbackResponse) Reset()         { *m = FallbackResponse{} }
func (m *FallbackResponse) String() string { return proto.CompactTextString(m) }
func (*FallbackResponse) ProtoMessage()    {}
func (*FallbackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3844fb5d150dbb, []int{4}
}

func (m *FallbackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FallbackResponse.Unmarshal(m, b)
}
func (m *FallbackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FallbackResponse.Marshal(b, m, deterministic)
}
func (m *FallbackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FallbackResponse.Merge(m, src)
}
func (m *FallbackResponse) XXX_Size() int {
	return xxx_messageInfo_FallbackResponse.Size(m)
}
func (m *FallbackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FallbackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FallbackResponse proto.InternalMessageInfo

func (m *FallbackResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *FallbackResponse) GetFallbackType() string {
	if m != nil {
		return m.FallbackType
	}
	return ""
}

func (m *FallbackResponse) GetData() *anypb.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FallbackResponse) GetFallbackAt() *timestamppb.Timestamp {
	if m != nil {
		return m.FallbackAt
	}
	return nil
}

// 重试信息
type RetryInfo struct {
	RetryCount           int32    `protobuf:"varint,1,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	MaxRetries           int32    `protobuf:"varint,2,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	NextRetryDelayMs     int64    `protobuf:"varint,3,opt,name=next_retry_delay_ms,json=nextRetryDelayMs,proto3" json:"next_retry_delay_ms,omitempty"`
	BackoffStrategy      string   `protobuf:"bytes,4,opt,name=backoff_strategy,json=backoffStrategy,proto3" json:"backoff_strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetryInfo) Reset()         { *m = RetryInfo{} }
func (m *RetryInfo) String() string { return proto.CompactTextString(m) }
func (*RetryInfo) ProtoMessage()    {}
func (*RetryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3844fb5d150dbb, []int{5}
}

func (m *RetryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryInfo.Unmarshal(m, b)
}
func (m *RetryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryInfo.Marshal(b, m, deterministic)
}
func (m *RetryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryInfo.Merge(m, src)
}
func (m *RetryInfo) XXX_Size() int {
	return xxx_messageInfo_RetryInfo.Size(m)
}
func (m *RetryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RetryInfo proto.InternalMessageInfo

func (m *RetryInfo) GetRetryCount() int32 {
	if m != nil {
		return m.RetryCount
	}
	return 0
}

func (m *RetryInfo) GetMaxRetries() int32 {
	if m != nil {
		return m.MaxRetries
	}
	return 0
}

func (m *RetryInfo) GetNextRetryDelayMs() int64 {
	if m != nil {
		return m.NextRetryDelayMs
	}
	return 0
}

func (m *RetryInfo) GetBackoffStrategy() string {
	if m != nil {
		return m.BackoffStrategy
	}
	return ""
}

func init() {
	proto.RegisterEnum("api.common.v1.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterType((*ErrorDetail)(nil), "api.common.v1.ErrorDetail")
	proto.RegisterType((*ErrorResponse)(nil), "api.common.v1.ErrorResponse")
	proto.RegisterMapType((map[string]string)(nil), "api.common.v1.ErrorResponse.MetadataEntry")
	proto.RegisterType((*ValidationError)(nil), "api.common.v1.ValidationError")
	proto.RegisterType((*ServiceError)(nil), "api.common.v1.ServiceError")
	proto.RegisterType((*FallbackResponse)(nil), "api.common.v1.FallbackResponse")
	proto.RegisterType((*RetryInfo)(nil), "api.common.v1.RetryInfo")
}

func init() {
	proto.RegisterFile("v1/errors.proto", fileDescriptor_2b3844fb5d150dbb)
}

var fileDescriptor_2b3844fb5d150dbb = []byte{
	// 1126 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4b, 0x6f, 0xe3, 0xd4,
	0x1f, 0xfd, 0xa7, 0x9e, 0xd6, 0x93, 0x5f, 0xda, 0xa9, 0x75, 0xa7, 0x9a, 0x49, 0x33, 0x8f, 0x76,
	0x32, 0x7f, 0x34, 0xa5, 0x82, 0x84, 0x16, 0x24, 0x46, 0x74, 0xe5, 0xc4, 0x37, 0xad, 0x55, 0x3f,
	0xda, 0x1b, 0xa7, 0xa5, 0xb3, 0xb1, 0x6e, 0xe3, 0x9b, 0xca, 0x9a, 0xc4, 0x0e, 0xb6, 0x1b, 0x35,
	0x6b, 0xc4, 0x12, 0x09, 0x04, 0x2c, 0xf8, 0x02, 0xb0, 0x62, 0xcb, 0x37, 0xe0, 0x73, 0xb0, 0xe6,
	0xfd, 0x7e, 0x2c, 0x91, 0xaf, 0xed, 0xe0, 0xa4, 0xa5, 0xb0, 0xf3, 0x3d, 0xbf, 0xe3, 0x7b, 0xcf,
	0x39, 0xf7, 0xd8, 0xb0, 0x3c, 0xda, 0xaa, 0xb3, 0x20, 0xf0, 0x83, 0xb0, 0x36, 0x0c, 0xfc, 0xc8,
	0x47, 0x4b, 0x74, 0xe8, 0xd6, 0xba, 0xfe, 0x60, 0xe0, 0x7b, 0xb5, 0xd1, 0x56, 0x65, 0xf5, 0xcc,
	0xf7, 0xcf, 0xfa, 0xac, 0xce, 0x87, 0xa7, 0xe7, 0xbd, 0x3a, 0xf5, 0xc6, 0x09, 0xb3, 0xb2, 0x36,
	0x3b, 0x8a, 0xdc, 0x01, 0x0b, 0x23, 0x3a, 0x18, 0x26, 0x84, 0xea, 0xdb, 0x05, 0x28, 0xe1, 0x78,
	0x6f, 0x85, 0x45, 0xd4, 0xed, 0xa3, 0x15, 0x98, 0xef, 0xb9, 0xac, 0xef, 0x94, 0x0b, 0xeb, 0x85,
	0x8d, 0x22, 0x49, 0x16, 0x08, 0xc1, 0x8d, 0xae, 0xef, 0xb0, 0xf2, 0x1c, 0x07, 0xf9, 0x33, 0x2a,
	0x83, 0x38, 0x60, 0x61, 0x48, 0xcf, 0x58, 0x59, 0xe0, 0x70, 0xb6, 0x44, 0xaf, 0xc0, 0xcd, 0x01,
	0x8b, 0xa8, 0x43, 0x23, 0x5a, 0xbe, 0xb1, 0x5e, 0xd8, 0x28, 0x6d, 0xaf, 0xd4, 0x12, 0x1d, 0xb5,
	0x4c, 0x47, 0x4d, 0xf6, 0xc6, 0x64, 0xc2, 0xaa, 0xbe, 0x23, 0xc0, 0x12, 0x57, 0x41, 0x58, 0x38,
	0xf4, 0xbd, 0x90, 0xa1, 0x97, 0xd2, 0x13, 0x63, 0x19, 0xb7, 0xb6, 0xcb, 0xb5, 0x29, 0xc7, 0x35,
	0xce, 0x6d, 0xfa, 0x0e, 0xbb, 0xac, 0x65, 0x6e, 0x5a, 0xcb, 0x6b, 0x20, 0x3a, 0xdc, 0x59, 0x58,
	0x16, 0xd6, 0x85, 0x8d, 0xd2, 0x76, 0xe5, 0xaa, 0xad, 0x12, 0xf3, 0x24, 0xa3, 0xa2, 0x07, 0x00,
	0x01, 0x7b, 0xeb, 0x9c, 0x85, 0x91, 0xed, 0x3a, 0xdc, 0x43, 0x91, 0x14, 0x53, 0x44, 0x75, 0xd0,
	0x53, 0x28, 0x4e, 0x72, 0x2c, 0xcf, 0x73, 0x87, 0x95, 0x4b, 0x0e, 0xad, 0x8c, 0x41, 0xfe, 0x26,
	0xc7, 0x42, 0x43, 0x16, 0x8c, 0xdc, 0x2e, 0x2b, 0x2f, 0x24, 0x42, 0xd3, 0x25, 0x6a, 0xe5, 0x42,
	0x13, 0xb9, 0xd2, 0xcd, 0xab, 0x94, 0x66, 0x01, 0xd5, 0xf4, 0x94, 0x8c, 0xbd, 0x28, 0xc8, 0x45,
	0x59, 0xd9, 0x81, 0xa5, 0xa9, 0x11, 0x92, 0x40, 0x78, 0xce, 0xc6, 0xe9, 0x7d, 0xc6, 0x8f, 0xf1,
	0x1d, 0x8f, 0x68, 0xff, 0x3c, 0xcb, 0x2a, 0x59, 0xbc, 0x31, 0xf7, 0xb4, 0x50, 0x7d, 0xb7, 0x00,
	0xcb, 0x47, 0xb4, 0xef, 0x3a, 0x34, 0x72, 0x7d, 0x8f, 0x1f, 0xf8, 0x0f, 0x8d, 0x78, 0x08, 0xd0,
	0xf5, 0xbd, 0x30, 0x0a, 0xa8, 0xeb, 0x45, 0xe9, 0x46, 0x39, 0xe4, 0x9a, 0x76, 0x6c, 0x66, 0xa7,
	0x5f, 0x57, 0x8d, 0x84, 0x52, 0xfd, 0x72, 0x0e, 0x16, 0xdb, 0x49, 0x40, 0x89, 0x98, 0x47, 0xb0,
	0x98, 0x06, 0x66, 0x7b, 0x74, 0xc0, 0x52, 0x4d, 0xa5, 0x14, 0x33, 0xe8, 0x80, 0xa1, 0x27, 0xb0,
	0x9c, 0x51, 0x46, 0x2c, 0x08, 0x5d, 0xdf, 0x4b, 0xe5, 0xdd, 0x4a, 0xe1, 0xa3, 0x04, 0x45, 0xaf,
	0x03, 0xf0, 0xaf, 0xca, 0xe6, 0x45, 0x13, 0xfe, 0xa5, 0x68, 0x45, 0x96, 0x3d, 0xa2, 0xc7, 0xb0,
	0x94, 0xbc, 0x98, 0x39, 0x4c, 0x0a, 0xb2, 0xc8, 0x41, 0xfd, 0x72, 0xf1, 0xe6, 0xff, 0x7b, 0xf1,
	0x76, 0xa0, 0xe4, 0x77, 0xbb, 0xe7, 0x41, 0xc0, 0x1c, 0x9b, 0x46, 0xbc, 0x23, 0xd7, 0x77, 0x0b,
	0x32, 0xba, 0x1c, 0xa1, 0x55, 0xb8, 0x19, 0x05, 0xb4, 0xcb, 0xe2, 0xce, 0x8a, 0x49, 0xe8, 0x7c,
	0xad, 0x3a, 0xe8, 0x2e, 0x88, 0xe1, 0x90, 0x7a, 0xf1, 0xe4, 0x26, 0x9f, 0x2c, 0xc4, 0x4b, 0xd5,
	0xa9, 0x7e, 0x5e, 0x00, 0xa9, 0x45, 0xfb, 0xfd, 0x53, 0xda, 0x7d, 0x3e, 0xf9, 0xf8, 0xee, 0xc0,
	0x42, 0xc0, 0x68, 0xe8, 0x7b, 0x69, 0xbe, 0xe9, 0x2a, 0x36, 0xde, 0x4b, 0xb9, 0x76, 0x34, 0x1e,
	0x66, 0x05, 0x5a, 0xcc, 0x40, 0x6b, 0x3c, 0x64, 0x68, 0x03, 0x6e, 0xf0, 0x12, 0x0b, 0xd7, 0x5c,
	0x2f, 0x67, 0xc4, 0x66, 0x27, 0xdb, 0xd1, 0x28, 0xed, 0xc3, 0xb5, 0x66, 0x33, 0xba, 0x1c, 0x55,
	0x3f, 0x2d, 0x40, 0x91, 0xb0, 0x28, 0x18, 0xab, 0x5e, 0xcf, 0x47, 0x6b, 0x50, 0x0a, 0xe2, 0x85,
	0xdd, 0xf5, 0xcf, 0xbd, 0x88, 0xcb, 0x9e, 0x27, 0xc0, 0xa1, 0x66, 0x8c, 0xc4, 0x84, 0x01, 0xbd,
	0xb0, 0x63, 0xc4, 0x65, 0x21, 0x17, 0x3e, 0x4f, 0x60, 0x40, 0x2f, 0x48, 0x82, 0xa0, 0x97, 0xe1,
	0xb6, 0xc7, 0x2e, 0x22, 0x3b, 0xd9, 0xc6, 0x61, 0x7d, 0x3a, 0xb6, 0x07, 0x21, 0x77, 0x21, 0x10,
	0x29, 0x1e, 0xf1, 0xd3, 0x94, 0x78, 0xa0, 0x87, 0xe8, 0x45, 0x90, 0x62, 0x21, 0x7e, 0xaf, 0x67,
	0xc7, 0x95, 0x8f, 0xd8, 0xd9, 0x38, 0xad, 0xc1, 0x72, 0x8a, 0xb7, 0x53, 0x78, 0xf3, 0x8b, 0x05,
	0x28, 0x4e, 0x7a, 0x84, 0x2a, 0x70, 0x07, 0x13, 0x62, 0x12, 0xbb, 0x69, 0x2a, 0xd8, 0xee, 0x18,
	0xed, 0x03, 0xdc, 0x54, 0x5b, 0x2a, 0x56, 0xa4, 0xff, 0xa1, 0x7b, 0x53, 0xb3, 0x86, 0xac, 0xd8,
	0x04, 0x1f, 0x76, 0x70, 0xdb, 0x92, 0xde, 0x13, 0xd0, 0x7d, 0xb8, 0x3b, 0xf5, 0xa2, 0xdc, 0xb1,
	0xf6, 0x4c, 0xa2, 0x3e, 0xc3, 0x8a, 0xf4, 0xbe, 0x80, 0x56, 0x61, 0x25, 0x37, 0x6d, 0x99, 0xa4,
	0xa1, 0x2a, 0x0a, 0x36, 0xa4, 0x0f, 0x66, 0x47, 0x86, 0x69, 0xd9, 0x2d, 0xb3, 0x63, 0x28, 0xd2,
	0x87, 0x02, 0xaa, 0xc2, 0x83, 0xdc, 0x48, 0xc7, 0xd6, 0x9e, 0xa9, 0x70, 0x86, 0xac, 0x69, 0xe6,
	0x31, 0x56, 0xa4, 0x8f, 0x04, 0x54, 0x86, 0xdb, 0x39, 0x4e, 0xd3, 0x34, 0x5a, 0x9a, 0xda, 0xb4,
	0xa4, 0x8f, 0x05, 0xf4, 0x7f, 0x58, 0x9b, 0x52, 0x74, 0x40, 0xcc, 0x26, 0x6e, 0xb7, 0xe5, 0x86,
	0x86, 0x6d, 0x6c, 0x58, 0xaa, 0x75, 0x22, 0x7d, 0x22, 0xa0, 0x47, 0x70, 0x3f, 0xc7, 0xb2, 0x4c,
	0xd3, 0xd6, 0x65, 0xe3, 0x24, 0x73, 0xd6, 0x96, 0x3e, 0x13, 0xd0, 0x0b, 0xb0, 0x9e, 0xa3, 0xa8,
	0x86, 0x85, 0x89, 0x21, 0x6b, 0x76, 0x1b, 0x93, 0x23, 0x4c, 0x6c, 0x3e, 0x92, 0x7e, 0x15, 0xd0,
	0x1a, 0x54, 0x66, 0x8c, 0xa8, 0xfa, 0x81, 0x86, 0x75, 0x6c, 0x58, 0x58, 0x91, 0x7e, 0x13, 0xae,
	0xc8, 0x6f, 0x57, 0xb6, 0xf0, 0xb1, 0x7c, 0x22, 0xfd, 0x2e, 0xa0, 0xc7, 0xf0, 0x30, 0x37, 0x8c,
	0xf7, 0x56, 0x9b, 0x3c, 0xc7, 0x23, 0x59, 0xd5, 0x62, 0xcd, 0xd2, 0x1f, 0xb3, 0x47, 0xa4, 0x6f,
	0xdb, 0x96, 0xaa, 0x63, 0xb3, 0x63, 0x49, 0x7f, 0x0a, 0xe8, 0x01, 0x94, 0xa7, 0xa4, 0x1e, 0xc9,
	0x9a, 0xaa, 0xd8, 0x87, 0x1d, 0x4c, 0x4e, 0xa4, 0xaf, 0xc4, 0x99, 0x40, 0x15, 0xb3, 0xd9, 0x89,
	0xd5, 0xe5, 0x42, 0xff, 0x5a, 0x44, 0xeb, 0x70, 0x2f, 0xc7, 0xc1, 0x7a, 0x03, 0x2b, 0x8a, 0x6a,
	0xec, 0xda, 0x2d, 0x59, 0xd5, 0xb0, 0x22, 0x7d, 0x23, 0xce, 0x44, 0x96, 0xc6, 0x9a, 0xa3, 0x7c,
	0x2b, 0xa2, 0x87, 0xb0, 0x9a, 0xa3, 0x1c, 0x76, 0x4c, 0x4b, 0xb6, 0xf1, 0x9b, 0x4d, 0x8c, 0x15,
	0xac, 0x48, 0xdf, 0x89, 0x33, 0x6e, 0x75, 0x53, 0xc1, 0x5a, 0x72, 0xb1, 0x13, 0xb7, 0xdf, 0x8b,
	0xe8, 0x09, 0x54, 0xaf, 0x30, 0x33, 0x51, 0xdd, 0x32, 0x89, 0x2e, 0x5b, 0xd2, 0x0f, 0xe2, 0x4c,
	0x2c, 0xcd, 0xbd, 0x8e, 0xb1, 0xcf, 0x6f, 0x52, 0x93, 0xc9, 0x2e, 0x96, 0x7e, 0x9c, 0xf5, 0x44,
	0x30, 0x91, 0x8d, 0xfd, 0x9c, 0xe0, 0x9f, 0x66, 0xb7, 0x90, 0xdb, 0x6d, 0xac, 0x37, 0xb4, 0x93,
	0x8c, 0xf0, 0xf3, 0x2c, 0xe1, 0xd8, 0x24, 0xfb, 0x2d, 0xcd, 0x3c, 0xce, 0x08, 0xbf, 0x88, 0x8d,
	0x3b, 0xcf, 0x56, 0x02, 0x7a, 0x56, 0xa7, 0x43, 0xb7, 0x9e, 0xfc, 0x45, 0xeb, 0xa3, 0xad, 0x9d,
	0xd1, 0xd6, 0xe9, 0x02, 0xff, 0x53, 0xbc, 0xfa, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2f, 0xb7,
	0x53, 0x5b, 0x27, 0x09, 0x00, 0x00,
}
