{
  "swagger": "2.0",
  "info": {
    "title": "v1/orchestrator_svc.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Orchestrator"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/health": {
      "get": {
        "summary": "健康检查",
        "operationId": "Orchestrator_HealthCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1HealthCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Orchestrator"
        ]
      }
    },
    "/v1/process/query": {
      "post": {
        "summary": "处理查询请求",
        "operationId": "Orchestrator_ProcessQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProcessQueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProcessQueryRequest"
            }
          }
        ],
        "tags": [
          "Orchestrator"
        ]
      }
    },
    "/v1/services/health": {
      "get": {
        "summary": "获取服务健康状态",
        "operationId": "Orchestrator_GetServicesHealth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetServicesHealthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "serviceNames",
            "description": "specific services to check",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "includeDetails",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Orchestrator"
        ]
      }
    },
    "/v1/workflows/definitions": {
      "get": {
        "summary": "列出工作流定义",
        "operationId": "Orchestrator_ListWorkflowDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListWorkflowDefinitionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.sortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeMetadata",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Orchestrator"
        ]
      },
      "post": {
        "summary": "创建工作流定义",
        "operationId": "Orchestrator_CreateWorkflowDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateWorkflowDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateWorkflowDefinitionRequest"
            }
          }
        ],
        "tags": [
          "Orchestrator"
        ]
      }
    },
    "/v1/workflows/definitions/{definitionId}": {
      "get": {
        "summary": "获取工作流定义",
        "operationId": "Orchestrator_GetWorkflowDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetWorkflowDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "definitionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "specific version, or latest if empty",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Orchestrator"
        ]
      },
      "put": {
        "summary": "更新工作流定义",
        "operationId": "Orchestrator_UpdateWorkflowDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateWorkflowDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "definitionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrchestratorUpdateWorkflowDefinitionBody"
            }
          }
        ],
        "tags": [
          "Orchestrator"
        ]
      }
    },
    "/v1/workflows/execute": {
      "post": {
        "summary": "执行工作流",
        "operationId": "Orchestrator_ExecuteWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExecuteWorkflowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExecuteWorkflowRequest"
            }
          }
        ],
        "tags": [
          "Orchestrator"
        ]
      }
    },
    "/v1/workflows/execute-async": {
      "post": {
        "summary": "异步执行工作流",
        "operationId": "Orchestrator_ExecuteWorkflowAsync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExecuteWorkflowAsyncResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExecuteWorkflowAsyncRequest"
            }
          }
        ],
        "tags": [
          "Orchestrator"
        ]
      }
    },
    "/v1/workflows/{workflowId}/cancel": {
      "post": {
        "summary": "取消工作流",
        "operationId": "Orchestrator_CancelWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CancelWorkflowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrchestratorCancelWorkflowBody"
            }
          }
        ],
        "tags": [
          "Orchestrator"
        ]
      }
    },
    "/v1/workflows/{workflowId}/status": {
      "get": {
        "summary": "获取工作流状态",
        "operationId": "Orchestrator_GetWorkflowStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetWorkflowStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeTrace",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeLogs",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Orchestrator"
        ]
      }
    }
  },
  "definitions": {
    "OrchestratorCancelWorkflowBody": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        },
        "forceCancel": {
          "type": "boolean"
        }
      }
    },
    "OrchestratorUpdateWorkflowDefinitionBody": {
      "type": "object",
      "properties": {
        "definition": {
          "$ref": "#/definitions/v1WorkflowDefinition"
        },
        "createNewVersion": {
          "type": "boolean"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CancelWorkflowResponse": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ProcessingStatus"
        },
        "cancellationReason": {
          "type": "string"
        },
        "cancelledAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ConditionalExecution": {
      "type": "object",
      "properties": {
        "condition": {
          "type": "string",
          "title": "expression to evaluate"
        },
        "executeIfTrue": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "step IDs to execute if true"
        },
        "executeIfFalse": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "step IDs to execute if false"
        },
        "conditionType": {
          "type": "string",
          "title": "\"javascript\", \"simple\", \"jsonpath\""
        }
      }
    },
    "v1ContextDocument": {
      "type": "object",
      "properties": {
        "documentId": {
          "type": "string"
        },
        "chunkId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "relevanceScore": {
          "type": "number",
          "format": "float"
        },
        "source": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1CreateWorkflowDefinitionRequest": {
      "type": "object",
      "properties": {
        "definition": {
          "$ref": "#/definitions/v1WorkflowDefinition"
        },
        "makeDefault": {
          "type": "boolean"
        }
      }
    },
    "v1CreateWorkflowDefinitionResponse": {
      "type": "object",
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "createdDefinition": {
          "$ref": "#/definitions/v1WorkflowDefinition"
        },
        "version": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ErrorHandlingStrategy": {
      "type": "object",
      "properties": {
        "strategy": {
          "type": "string",
          "title": "\"fail_fast\", \"continue_on_error\", \"retry_all\""
        },
        "maxGlobalRetries": {
          "type": "integer",
          "format": "int32"
        },
        "enableRollback": {
          "type": "boolean"
        },
        "criticalSteps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "steps that must succeed"
        }
      }
    },
    "v1ExecuteWorkflowAsyncRequest": {
      "type": "object",
      "properties": {
        "workflowDefinitionId": {
          "type": "string"
        },
        "inputParameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "options": {
          "$ref": "#/definitions/v1ExecutionOptions"
        },
        "callbackUrl": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1ExecuteWorkflowAsyncResponse": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ProcessingStatus"
        },
        "estimatedCompletionSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ExecuteWorkflowRequest": {
      "type": "object",
      "properties": {
        "workflowDefinitionId": {
          "type": "string"
        },
        "inputParameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "options": {
          "$ref": "#/definitions/v1ExecutionOptions"
        },
        "executionId": {
          "type": "string",
          "title": "optional, for idempotency"
        }
      }
    },
    "v1ExecuteWorkflowResponse": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ProcessingStatus"
        },
        "outputResults": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "metadata": {
          "$ref": "#/definitions/v1WorkflowExecutionMetadata"
        },
        "executionTrace": {
          "$ref": "#/definitions/v1WorkflowExecutionTrace"
        }
      }
    },
    "v1ExecutionOptions": {
      "type": "object",
      "properties": {
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "enableRetry": {
          "type": "boolean"
        },
        "maxRetries": {
          "type": "integer",
          "format": "int32"
        },
        "enableFallback": {
          "type": "boolean"
        },
        "enableCircuitBreaker": {
          "type": "boolean"
        },
        "executionContext": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1FallbackConfiguration": {
      "type": "object",
      "properties": {
        "fallbackType": {
          "type": "string",
          "title": "\"default_value\", \"skip\", \"alternative_step\""
        },
        "fallbackValue": {
          "$ref": "#/definitions/protobufAny"
        },
        "alternativeStepId": {
          "type": "string"
        }
      }
    },
    "v1Filter": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "过滤条件"
    },
    "v1GetServicesHealthResponse": {
      "type": "object",
      "properties": {
        "servicesHealth": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ServiceHealthStatus"
          }
        },
        "overallStatus": {
          "$ref": "#/definitions/v1OverallHealthStatus"
        },
        "checkedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GetWorkflowDefinitionResponse": {
      "type": "object",
      "properties": {
        "definition": {
          "$ref": "#/definitions/v1WorkflowDefinition"
        },
        "metadata": {
          "$ref": "#/definitions/v1WorkflowDefinitionMetadata"
        }
      }
    },
    "v1GetWorkflowStatusResponse": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ProcessingStatus"
        },
        "metadata": {
          "$ref": "#/definitions/v1WorkflowExecutionMetadata"
        },
        "executionTrace": {
          "$ref": "#/definitions/v1WorkflowExecutionTrace"
        },
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WorkflowLog"
          }
        }
      }
    },
    "v1HealthCheckResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "\"SERVING\", \"NOT_SERVING\", \"SERVICE_UNKNOWN\""
        },
        "service": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "健康检查响应"
    },
    "v1ListWorkflowDefinitionsResponse": {
      "type": "object",
      "properties": {
        "definitions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WorkflowDefinitionInfo"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1PaginationResponse"
        }
      }
    },
    "v1OverallHealthStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "\"HEALTHY\", \"DEGRADED\", \"UNHEALTHY\""
        },
        "healthyServices": {
          "type": "integer",
          "format": "int32"
        },
        "totalServices": {
          "type": "integer",
          "format": "int32"
        },
        "unavailableServices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "healthSummary": {
          "type": "string"
        }
      }
    },
    "v1PaginationRequest": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "sortBy": {
          "type": "string"
        },
        "sortDesc": {
          "type": "boolean"
        }
      },
      "title": "分页请求参数"
    },
    "v1PaginationResponse": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "string",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "分页响应信息"
    },
    "v1ProcessQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/v1QueryProcessingOptions"
        },
        "context": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1ProcessQueryResponse": {
      "type": "object",
      "properties": {
        "queryId": {
          "type": "string"
        },
        "finalAnswer": {
          "type": "string"
        },
        "contextDocuments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ContextDocument"
          }
        },
        "metadata": {
          "$ref": "#/definitions/v1QueryProcessingMetadata"
        },
        "executionTrace": {
          "$ref": "#/definitions/v1WorkflowExecutionTrace"
        }
      }
    },
    "v1ProcessingStatus": {
      "type": "string",
      "enum": [
        "PROCESSING_STATUS_UNSPECIFIED",
        "PROCESSING_STATUS_PENDING",
        "PROCESSING_STATUS_PROCESSING",
        "PROCESSING_STATUS_COMPLETED",
        "PROCESSING_STATUS_FAILED",
        "PROCESSING_STATUS_CANCELLED"
      ],
      "default": "PROCESSING_STATUS_UNSPECIFIED",
      "title": "处理状态"
    },
    "v1QueryProcessingMetadata": {
      "type": "object",
      "properties": {
        "totalProcessingTimeMs": {
          "type": "string",
          "format": "int64"
        },
        "serviceProcessingTimes": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "workflowUsed": {
          "type": "string"
        },
        "totalDocumentsSearched": {
          "type": "integer",
          "format": "int32"
        },
        "documentsReturned": {
          "type": "integer",
          "format": "int32"
        },
        "servicesCalled": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "debugInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "startedAt": {
          "type": "string",
          "format": "date-time"
        },
        "completedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1QueryProcessingOptions": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string",
          "title": "use predefined workflow"
        },
        "customWorkflow": {
          "$ref": "#/definitions/v1WorkflowDefinition",
          "title": "or define custom workflow"
        },
        "enableCaching": {
          "type": "boolean"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "enableFallback": {
          "type": "boolean"
        },
        "serviceOptions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1ServiceHealthDetails": {
      "type": "object",
      "properties": {
        "responseTimeMs": {
          "type": "string",
          "format": "int64"
        },
        "errorMessage": {
          "type": "string"
        },
        "serviceMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "availableMethods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ServiceHealthStatus": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "title": "\"SERVING\", \"NOT_SERVING\", \"SERVICE_UNKNOWN\""
        },
        "version": {
          "type": "string"
        },
        "lastCheck": {
          "type": "string",
          "format": "date-time"
        },
        "details": {
          "$ref": "#/definitions/v1ServiceHealthDetails"
        }
      }
    },
    "v1StepConfiguration": {
      "type": "object",
      "properties": {
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "retryAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "retryStrategy": {
          "type": "string",
          "title": "\"fixed\", \"exponential\", \"linear\""
        },
        "enableFallback": {
          "type": "boolean"
        },
        "fallbackConfig": {
          "$ref": "#/definitions/v1FallbackConfiguration"
        },
        "runInParallel": {
          "type": "boolean"
        },
        "customConfig": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1StepExecutionEvent": {
      "type": "object",
      "properties": {
        "eventType": {
          "type": "string",
          "title": "\"started\", \"retry\", \"fallback\", \"completed\", \"failed\""
        },
        "eventMessage": {
          "type": "string"
        },
        "eventTime": {
          "type": "string",
          "format": "date-time"
        },
        "eventMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1StepExecutionTrace": {
      "type": "object",
      "properties": {
        "stepId": {
          "type": "string"
        },
        "stepName": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ProcessingStatus"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time"
        },
        "completedAt": {
          "type": "string",
          "format": "date-time"
        },
        "durationMs": {
          "type": "string",
          "format": "int64"
        },
        "inputData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "outputData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "errorMessage": {
          "type": "string"
        },
        "retryCount": {
          "type": "integer",
          "format": "int32"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StepExecutionEvent"
          }
        }
      }
    },
    "v1UpdateWorkflowDefinitionResponse": {
      "type": "object",
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "updatedDefinition": {
          "$ref": "#/definitions/v1WorkflowDefinition"
        },
        "version": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1WorkflowConfiguration": {
      "type": "object",
      "properties": {
        "globalTimeoutSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "enableParallelExecution": {
          "type": "boolean"
        },
        "executionStrategy": {
          "type": "string",
          "title": "\"sequential\", \"parallel\", \"dag\""
        },
        "errorHandling": {
          "$ref": "#/definitions/v1ErrorHandlingStrategy"
        },
        "globalSettings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1WorkflowDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WorkflowStep"
          }
        },
        "configuration": {
          "$ref": "#/definitions/v1WorkflowConfiguration"
        },
        "defaultParameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1WorkflowDefinitionInfo": {
      "type": "object",
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "metadata": {
          "$ref": "#/definitions/v1WorkflowDefinitionMetadata"
        }
      }
    },
    "v1WorkflowDefinitionMetadata": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "executionCount": {
          "type": "integer",
          "format": "int32"
        },
        "successRate": {
          "type": "number",
          "format": "float"
        },
        "avgExecutionTimeMs": {
          "type": "number",
          "format": "float"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1WorkflowExecutionMetadata": {
      "type": "object",
      "properties": {
        "workflowDefinitionId": {
          "type": "string"
        },
        "workflowVersion": {
          "type": "string"
        },
        "executorId": {
          "type": "string"
        },
        "executionContext": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time"
        },
        "completedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1WorkflowExecutionSummary": {
      "type": "object",
      "properties": {
        "overallStatus": {
          "$ref": "#/definitions/v1ProcessingStatus"
        },
        "totalSteps": {
          "type": "integer",
          "format": "int32"
        },
        "successfulSteps": {
          "type": "integer",
          "format": "int32"
        },
        "failedSteps": {
          "type": "integer",
          "format": "int32"
        },
        "skippedSteps": {
          "type": "integer",
          "format": "int32"
        },
        "totalExecutionTimeMs": {
          "type": "string",
          "format": "int64"
        },
        "failureReason": {
          "type": "string"
        }
      }
    },
    "v1WorkflowExecutionTrace": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string"
        },
        "stepTraces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StepExecutionTrace"
          }
        },
        "summary": {
          "$ref": "#/definitions/v1WorkflowExecutionSummary"
        }
      }
    },
    "v1WorkflowLog": {
      "type": "object",
      "properties": {
        "logLevel": {
          "type": "string",
          "title": "\"DEBUG\", \"INFO\", \"WARN\", \"ERROR\""
        },
        "message": {
          "type": "string"
        },
        "stepId": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1WorkflowStep": {
      "type": "object",
      "properties": {
        "stepId": {
          "type": "string"
        },
        "stepName": {
          "type": "string"
        },
        "serviceName": {
          "type": "string",
          "description": "\"preprocessor\", \"embedding\", \"docstore\", etc."
        },
        "methodName": {
          "type": "string",
          "title": "service method to call"
        },
        "inputMapping": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          },
          "title": "how to map inputs"
        },
        "outputMapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "how to map outputs"
        },
        "stepConfig": {
          "$ref": "#/definitions/v1StepConfiguration"
        },
        "dependsOn": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "step dependencies"
        },
        "conditional": {
          "$ref": "#/definitions/v1ConditionalExecution"
        }
      }
    }
  }
}
